class SalesController < ApplicationController
  def checkout
    @item = Item.includes(:sales).find_by(id: params[:id])
    return render_no_item unless @item.present?

    @sale = @item.sales.first
    @error_messages = []

    if @sale.blank?
      new_checkout
    else
      return_checkout
    end
  end

  def new_checkout
    order_response = CoinGate::Orders::Create.call(item: @item)
    return render_failed_coingate_api if order_response.status != "new"

    @sale = Sale.create(sale_params(order_response))
    return render_failed_sale_create if @sale.errors.present?

    render "checkout", locals: { coingate_url: order_response.payment_url }
  end

  def return_checkout
    # Fetch coingate order & payment URL
    order_response = CoinGate::Merchant::Order.find(@sale.coingate_order_id)

    return render_failed_coingate_return unless order_response.status == "new"
    render "checkout", locals: { coingate_url: order_response.payment_url }
  end

  def render_no_item
    @error_messages = ["You are attempting to checkout with an unknown item."]
  end

  def render_failed_coingate_api
    @error_messages = ["Failed to create your order. Return to #{item_url(@item)} after contacting support to finish the nft creation process."]
  end

  def render_failed_coingate_return
    @error_messages = ["Failed to find your order in our payment processor. Please contact support with your NFT link handy for help. #{item_url(@item)}"]
  end

  def render_failed_sale_create
    @error_messages = @sale.errors.full_messages.merge("Return to #{item_url(@item)} after contacting support to finish the nft creation process.")
  end

  private

  def sale_params(order_response)
    { quantity:     1,
      gas_for_mint: ENV["MINT_GAS_LIMIT"],
      gas_price:    Etherscan::GasStation.gas_price,
      token:        order_response.token,
      nft_asset:    @item,
      nft_owner:    @item.owner,
      merchant_order_id: order_response.order_id, # This is from hogemint
      coingate_order_id: order_response.id } # Generated by coingate
  end
end
